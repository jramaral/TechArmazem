// <auto-generated />
using System;
using ArmazemAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArmazemAPI.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20210202174006_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArmazemAPI.Models.ClienteFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClienteFornecedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Maria da Silva",
                            Tipo = "C"
                        });
                });

            modelBuilder.Entity("ArmazemAPI.Models.CompraVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteFornecedorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteFornecedorId");

                    b.ToTable("CompraVendas");
                });

            modelBuilder.Entity("ArmazemAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompraVendaId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Qtde")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimentacao")
                        .HasColumnType("VARCHAR(1)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompraVendaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("ArmazemAPI.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoriaProduto")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<int>("QtdeEstoque")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Produto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaProduto = "DOCE",
                            NomeProduto = "PRODUTO TESTE 1",
                            QtdeEstoque = 25,
                            ValorCompra = 0m,
                            ValorVenda = 150m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaProduto = "SALGADO",
                            NomeProduto = "PRODUTO TESTE 2",
                            QtdeEstoque = 25,
                            ValorCompra = 0m,
                            ValorVenda = 15m
                        });
                });

            modelBuilder.Entity("ArmazemAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Role")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "12345678978",
                            Email = "jose@email.com",
                            Nome = "jose roberto",
                            NomeUsuario = "jose",
                            Role = "admin",
                            Senha = "123456"
                        });
                });

            modelBuilder.Entity("ArmazemAPI.Models.CompraVenda", b =>
                {
                    b.HasOne("ArmazemAPI.Models.ClienteFornecedor", "ClienteFornecedor")
                        .WithMany()
                        .HasForeignKey("ClienteFornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmazemAPI.Models.Item", b =>
                {
                    b.HasOne("ArmazemAPI.Models.CompraVenda", "CompraVenda")
                        .WithMany()
                        .HasForeignKey("CompraVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmazemAPI.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
